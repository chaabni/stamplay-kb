angular.module("app").factory("AccountService",["$q","$stamplay",function($q,$stamplay){var user=$stamplay.User().Model;return{login:function(){user.login("github")},logout:function(){user.logout("github")},currentUser:function(){var q=$q.defer();return user.currentUser().then(function(){q.resolve(user)}),q.promise}}}]),angular.module("app").factory("QuestionService",["$q","$http","$stamplay","algolia","$rootScope",function($q,$http,$stamplay,algolia,$rootScope){var client=algolia.Client("7TMV8F22UN","b5e5aa05c764aa1718bc96b793078703"),index=client.initIndex("KBQUESTIONS");return{newQuestion:function(details){var question=$stamplay.Cobject("question").Model,q=$q.defer();return question.set("title",details.title),question.set("body",details.body),details.owner_email&&question.set("owner_email",details.owner_email),question.save().then(function(){q.resolve(question.instance)}),q.promise},getQuestions:function(){var questionCollection=$stamplay.Cobject("question").Collection,q=$q.defer();return questionCollection.sortDescending("dt_create").populate().pagination(1,30).populateOwner().fetch().then(function(){q.resolve(questionCollection)}),q.promise},searchQuestions:function(query){var q=$q.defer();return index.search(query).then(function(content){q.resolve(content)},function(err){q.reject()}),q.promise},getQuestionDetails:function(id){var question=$stamplay.Cobject("question").Collection,solution_owner=$stamplay.User().Model,q=$q.defer();return question.equalTo("_id",id).populate().populateOwner().fetch().then(function(){var _question=question.instance[0];if(console.log(_question),question.instance[0].instance.solution_id){var _id=_question.instance.solution_id[0].owner;solution_owner.fetch(_id).then(function(){var solution=new $stamplay.Cobject("solution").Model;solution.instance=_question.instance.solution_id[0],_question.instance.solution_id=solution,_question.instance.solution_id.instance.owner=solution_owner.instance,console.log("resolves with solution"),q.resolve(_question)},function(err){console.log(err)})}else console.log("resolves without solution"),q.resolve(question.instance[0])}),q.promise},addSolution:function(description,id,owner_email){var q=$q.defer(),solution=$stamplay.Cobject("solution").Model,question=$stamplay.Cobject("question").Model;return solution.set("description",description),owner_email&&solution.set("question_owner",owner_email),solution.save().then(function(){question.fetch(id).then(function(){question.set("solution_id",solution.instance._id),question.save().then(function(){solution.fetch(question.instance.solution_id[0]).then(function(){q.resolve(solution)})})})}),q.promise},getOwner:function(id){var q=$q.defer();return $http.get('https://stamplaykb.stamplayapp.com/api/user/v1/users?where={"_id":"'+id+'"}').then(function(res){q.resolve(res.data.data[0])},function error(){q.reject(error)}),q.promise}}}]);